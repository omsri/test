{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {    
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_ZRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Premium_LRS"
        ],
        "metadata":{  
            "description":"Storage Account type"
         }
      },
      "vmName": {
        "defaultValue": "zca-vm",
        "type": "string",
        "metadata": {
            "description": "zca virtual machine name"
        }
      },
      "vmAdminUserName": {
        "type": "string",
        "minLength": 1,
        "metadata": {
            "description" : "Virtual Machine user name"
        }
      },
      "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
            "description" : "Virtual Machine password"
        }
      },
      "remoteVnetResource" : {
        "type": "string",
        "metadata": {
          "description" : "Resource id for the remote vnet to connect with peering"
        }
      }
    },
    "variables": { 
      "virtualNetworkName": "target-vnet", 
      "Subnet1Name": "Subnet-1",   
      "vnetPrefix": "10.1.2.0/24",
	  "vnetSubnetPrefix" : "10.1.2.32/27",   
      "vmOSDiskName": "vmOSDisk",
      "vmSize": "Standard_DS3_v2",      
      "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('Subnet1Name'))]",
      "vmStorageAccountContainerName": "vhds",
      "vmNicName": "[concat(parameters('vmName'), 'NetworkInterface')]",
      "pipName": "pip",
      "nsgName" : "zca-nsg",
      "newStorageAccountName": "[concat('zerto', uniqueString(resourceGroup().id))]"
      },      
    "resources": [
      {
        "name": "[variables('newStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-01-01",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "dependsOn": [ ],
        "tags": {
          "displayName": "storageAccount"
        },
        "kind": "Storage"
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [ ],
        "tags": {
          "displayName": "vnet"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnetPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('Subnet1Name')]",
              "properties": {
                "addressPrefix": "[variables('vnetSubnetPrefix')]"
              }
            }
          ]
        },
        "resources": [
          {
              "apiVersion": "2016-06-01",
              "type": "virtualNetworkPeerings",
              "name": "target2sourcePeering",
              "location": "[resourceGroup().location]",
              "dependsOn" : [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			  ],	                            
              "properties": {
                  "allowVirtualNetworkAccess": "true",
                  "allowForwardedTraffic": "false",
                  "allowGatewayTransit": "false",
                  "useRemoteGateways": "false",
                  "remoteVirtualNetwork": {
                      "id": "[parameters('remoteVnetResource')]"
                  }
              }
          }
       ]
      },
      {
        "name": "[variables('vmNicName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
        ],
        "tags": {
          "displayName": "vmNic"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('vmSubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                  }
        }
      },
      {
        "name": "[parameters('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
        ],
        "tags": {
          "displayName": "vm"
        },
        "plan": {
          "name": "zerto60ga",
          "publisher": "zerto",
          "product": "zerto-cloud-appliance-50"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "zerto",
              "offer": "zerto-cloud-appliance-50",
              "sku": "zerto60ga",
              "version": "latest"
            },
            "osDisk": {
              "name": "vmOSDisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/', variables('vmOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
              }
            ]
          }
        }
      },
      {
        "name": "[variables('pipName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [ ],
        "tags": {
          "displayName": "pip"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic"          
        }
      },
      {          
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('nsgName')]",
              "apiVersion": "2017-06-01",
              "location": "[resourceGroup().location]",            
              "properties": { 
                      "securityRules": [
                      {
                          "name": "AllowRDP",
                          "etag": "W/\"ec1cdead-18a3-4ae4-b0fa-1d58260ead30\"",
                          "properties": {
                              "provisioningState": "Succeeded",
                              "protocol": "TCP",
                              "sourcePortRange": "*",
                              "destinationPortRange": "3389",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound",
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                          }
                      }
                  ]			
              }
          }
      
    ],
    "outputs": {
      "vNet" : {
        "type" : "string",
        "value" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      }
    }
  }
